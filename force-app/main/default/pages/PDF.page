<!--
https://developer.salesforce.com/forums/?id=9060G0000005psFQAQ
http://www.vermanshul.com/2017/07/lightning-generate-pdf-from-lightning.html
https://github.com/kumarrk21/PDFViewer
-->

<apex:page controller="PDFController" 
           showHeader="false" 
           sidebar="false" 
           applyBodyTag="false" 
           applyHtmlTag="false"           
           renderAs="{!IF(NOT(ISBLANK($CurrentPage.parameters.pdf)), 'pdf', '')}">
    <html>
        <head>
            <script src="/soap/ajax/42.0/connection.js" type="text/javascript"></script>
            <script src="/soap/ajax/30.0/apex.js" type="text/javascript"></script>
            <script src="{!URLFOR($Resource.fileSaver)}" type="text/javascript"></script>
            <script src="{!URLFOR($Resource.jsZip)}" type="text/javascript"></script>
            <style>
                @media print{
                    .noprint{
                       display:none            
                    }
                }
            </style>
            <title>ddd</title>
        </head>    
        <body>
            <c:PDF_Register controllerVar="{!self}" RelationShipVar="Contacts" fieldsVar="Id, Name"/>
            <c:PDF_Register controllerVar="{!self}" RelationShipVar="Cases" fieldsVar="Id, CaseNumber"/>
        
            <apex:repeat value="{!execute}" var="x"></apex:repeat>
        
            <apex:outputField value="{!record.Name}"/>    
            <apex:pageBlock >
                <apex:pageBlockTable value="{!record['Contacts']}" var="contact">
                    <apex:column headerValue="{!$ObjectType.Contact.fields.Name.Label}">
                        <apex:outputLink value="{!URLFOR($Action.Contact.View, contact.Id)}">{!contact['Name']}</apex:outputLink>
                    </apex:column>       
                </apex:pageBlockTable>
            </apex:pageBlock>
            <apex:pageBlock >
                <apex:pageBlockTable value="{!record['Cases']}" var="case">
                    <apex:column value="{!case['Id']}"/>
                    <apex:column value="{!case['CaseNumber']}"/>            
                </apex:pageBlockTable>
            </apex:pageBlock>
            <br/>
        
            <button class="noprint" onclick="dwn()">download</button>
            <button class="noprint" onclick="dwnZip()">download zip</button>
            <script>
                sforce.connection.sessionId='{!GETSESSIONID()}';

                function download(){
                    var win = window.open('/apex/PDF?pdf=1&download=1', '_blank');
                    win.addEventListener("DOMContentLoaded", function(event) {
                        console.log("DOM fully loaded and parsed");
                        
                    });
                    win.onload = function(){
                        console.log("onload ");
                        win.close();
                    }
                }
                function b64toBlob(b64Data, contentType, sliceSize) {
                  contentType = contentType || '';
                  sliceSize = sliceSize || 512;
                
                  var byteCharacters = atob(b64Data);
                  var byteArrays = [];
                
                  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
                    var slice = byteCharacters.slice(offset, offset + sliceSize);
                
                    var byteNumbers = new Array(slice.length);
                    for (var i = 0; i < slice.length; i++) {
                      byteNumbers[i] = slice.charCodeAt(i);
                    }
                
                    var byteArray = new Uint8Array(byteNumbers);
                
                    byteArrays.push(byteArray);
                  }
                
                  var blob = new Blob(byteArrays, {type: contentType});
                  return blob;
                }
                getBase64: function(file) {
                    return new Promise(function(resolve, reject){
                        const reader = new FileReader();
                        reader.readAsDataURL(file);
                        reader.onload = function(){
                            let encoded = reader.result.replace(/^data:(.*;base64,)?/, '');
                            if ((encoded.length % 4) > 0) {
                                encoded += '='.repeat(4 - (encoded.length % 4));
                            }
                            resolve(encoded);
                        };
                        reader.onerror = function(error){
                            reject(error)
                        };
                    })
                },
                function dwn(){
                    sforce.apex.execute("PDFController","getFileToDownload", {}, function(result){
                        saveAs(b64toBlob(result,'application/pdf'), 'abc.pdf');
                    });
                }            
                
                function dwnZip(){                   
                    sforce.apex.execute("PDFController","getFileToDownload", {}, function(result){
                        var zip = new JSZip();
                        zip.file("Hello.txt", "Hello World\n");
                        var pdf= zip.folder("pdf");
                        pdf.file("abc.pdf", b64toBlob(result,'application/pdf'), {base64: true});
                        zip.generateAsync({type:"blob"})
                        .then(function(content) {
                            saveAs(content, "example.zip");
                        });
                    });
                }
                
                function utf8_to_b64( str ) {
                    return window.btoa(unescape(encodeURIComponent( str )));
                }
                
                function b64_to_utf8( str ) {
                    return decodeURIComponent(escape(window.atob( str )));
                }    
                
            </script>
        </body>   
    </html>              
</apex:page>